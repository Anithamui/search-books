{"version":3,"sources":["reportWebVitals.js","Book.js","SearchBooks.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Book","props","book","title","first_publish_year","cover_i","author_name","src","alt","length","join","SearchBooks","useState","searchText","setSearchText","prevSearchText","setPrevSearchText","results","setResults","sortFilter","setSortFilter","queryString","setQueryString","history","useHistory","location","useLocation","useEffect","push","QS","parse","search","q","sortBy","fetch","res","json","result","docs","error","console","log","_results","sort","a","b","localeCompare","Date","getTime","onSubmit","e","preventDefault","stringify","name","type","value","onChange","target","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a2bd7fc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Book = (props) => {\r\n\tconst { title, first_publish_year, cover_i, author_name } = props.book;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img src={`http://covers.openlibrary.org/b/id/${cover_i}-M.jpg`} alt=\"\" />\r\n\t\t\t<h4>{title}</h4>\r\n\t\t\t<p>{first_publish_year}</p>\r\n\t\t\t<p>{author_name && author_name.length > 0 && author_name.join()}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Book;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QS from \"query-string\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport Book from \"./Book\";\r\n\r\nconst SearchBooks = () => {\r\n\tconst [searchText, setSearchText] = useState(\"\");\r\n\tconst [prevSearchText, setPrevSearchText] = useState(\"prevText\");\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [sortFilter, setSortFilter] = useState(\"\");\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\r\n\tconst handleSearch = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!searchText) return;\r\n\t\tsetQueryString(QS.stringify({ q: searchText, sortBy: sortFilter }));\r\n\t};\r\n\r\n\tconst handleSortFilterChange = (e) => {\r\n\t\tif (e.target.value === \"title\") {\r\n\t\t\tsetQueryString(QS.stringify({ q: searchText, sortBy: \"title\" }));\r\n\t\t} else if (e.target.value === \"publishDate\") {\r\n\t\t\tsetQueryString(QS.stringify({ q: searchText, sortBy: \"publishDate\" }));\r\n\t\t} else setQueryString(QS.stringify({ q: searchText, sortBy: \"\" }));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (queryString) history.push(`/search-books/?${queryString}`);\r\n\t}, [history, queryString]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { q, sortBy } = QS.parse(location.search);\r\n\t\t// Don't call if the search text is same\r\n\t\tif (q && q !== prevSearchText) {\r\n\t\t\tsetSearchText(q);\r\n\r\n\t\t\tfetch(`http://openlibrary.org/search.json?title=${q}`)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\tsetResults(result.docs ? result.docs : []);\r\n\t\t\t\t\t\tsetPrevSearchText(q);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetSortFilter(sortBy);\r\n\t\tif (sortBy) {\r\n\t\t\tconst _results = [...results];\r\n\t\t\tif (sortBy === \"title\") {\r\n\t\t\t\t_results.sort((a, b) => a.title.localeCompare(b.title));\r\n\t\t\t\tsetResults(_results);\r\n\t\t\t} else if (sortBy === \"publishDate\") {\r\n\t\t\t\t_results.sort(\r\n\t\t\t\t\t(a, b) =>\r\n\t\t\t\t\t\tnew Date(a.first_publish_year).getTime() -\r\n\t\t\t\t\t\tnew Date(b.first_publish_year).getTime()\r\n\t\t\t\t);\r\n\t\t\t\tsetResults(_results);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [location.search, prevSearchText]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSearch}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={searchText}\r\n\t\t\t\t\tonChange={(e) => setSearchText(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\" name=\"searchButton\">\r\n\t\t\t\t\tSearch Books\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tSort By:\r\n\t\t\t\t\t<select value={sortFilter} onChange={handleSortFilterChange}>\r\n\t\t\t\t\t\t<option value=\"\"></option>\r\n\t\t\t\t\t\t<option value=\"title\">Book Title</option>\r\n\t\t\t\t\t\t<option value=\"publishDate\">Book First Published Year</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{results.length > 0 &&\r\n\t\t\t\t\t\tresults.map((b, index) => <Book key={index} book={b}></Book>)}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBooks;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport SearchBooks from \"./SearchBooks\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<SearchBooks />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}